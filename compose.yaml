services:
  api:
    image: ghcr.io/serverlessworkflow/synapse/api:${SYNAPSE_VERSION:-1.0.0-alpha5.17}
    environment:
      CONNECTIONSTRINGS__REDIS: redis:6379
      SYNAPSE_DASHBOARD_SERVE: true
      SYNAPSE_API_AUTH_TOKEN_FILE: /config/tokens.yaml
      SYNAPSE_API_JWT_AUTHORITY: http://api:9999
      SYNAPSE_API_CLOUD_EVENTS_ENDPOINT: https://webhook.site/a4aff725-0711-48b2-a9d2-5d1b806d04d0
    ports:
      - 9999:8080
    links:
      - redis
    depends_on:
      correlator:
        condition: service_started
      init:
        condition: service_completed_successfully
      operator:
        condition: service_started
    volumes:
      - config:/config

  correlator:
    image: ghcr.io/serverlessworkflow/synapse/correlator:${SYNAPSE_VERSION:-1.0.0-alpha5.17}
    environment:
      CONNECTIONSTRINGS__REDIS: redis:6379
      SYNAPSE_CORRELATOR_NAMESPACE: default
      SYNAPSE_CORRELATOR_NAME: correlator-1
    ports:
      - 9998:8080
    links:
      - redis

  operator:
    image: ghcr.io/serverlessworkflow/synapse/operator:${SYNAPSE_VERSION:-1.0.0-alpha5.17}
    environment:
      CONNECTIONSTRINGS__REDIS: redis:6379
      SYNAPSE_OPERATOR_NAMESPACE: default
      SYNAPSE_OPERATOR_NAME: operator-1
      SYNAPSE_RUNNER_API: http://api:8080
      SYNAPSE_RUNNER_LIFECYCLE_EVENTS: 'true'
      SYNAPSE_RUNNER_CONTAINER_PLATFORM: docker
      SYNAPSE_RUNTIME_DOCKER_SECRETS_DIRECTORY: C:\Users\User\.synapse\secrets
      DOCKER_HOST: unix:///var/run/docker.sock
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    links:
      - redis

  init:
    image: alpine
    volumes:
      - config:/config
    # Login token is q1w2e3r4
    command: >
      sh -c "echo 'q1w2e3r4: \
        sub: fc4c86cd-e4ff-463c-b0e4-36f34f795d7e \
        name: root \
        role: admin' > /config/tokens.yaml"

  redis:
    image: redis:8-alpine

volumes:
  config:
