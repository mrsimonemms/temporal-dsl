document:
  dsl: 1.0.0
  namespace: default
  name: query
  version: 0.0.1
  title: Serverless Workflow
  summary: Listen for events
do:
  - queryState:
      listen:
        to:
          one:
            with:
              # ID maps to the query name in Temporal
              id: get_state
              # Temporal update - used to make read/write request
              type: query
              # Convert the data to JSON - in Temporal, this gets converted to map[string]all so it gets serialized correctly
              datacontenttype: application/json
              # The data returned from the query - for application/json, this must be a string so Go interpolation works correctly
              data: |
                id: {{ .id }}
                progressPercentage: {{ .progressPercentage | default 0 }}
                status: {{ .status | default "not started" }}
  - createState:
      set:
        # Items created at top-level are persisted
        id: "{{ uuidv4 }}"
  - wait:
      wait:
        seconds: 5
  - updateState:
      set:
        progressPercentage: 33
        status: running
  - wait:
      wait:
        seconds: 5
  - updateState:
      set:
        progressPercentage: 66
        # status remains as "running" if it remains as top-level item
  - wait:
      wait:
        seconds: 5
  - stateComplete:
      set:
        progressPercentage: 100
        status: finished
  - wait:
      wait:
        seconds: 5
